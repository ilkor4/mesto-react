{"ast":null,"code":"class Api {\n  constructor(link, token) {\n    this.deleteCard = cardId => {\n      return fetch(this._link + `cards/${cardId}`, {\n        method: 'DELETE',\n        headers: {\n          authorization: this._token\n        }\n      }).then(res => this._handleSubmitResponse(res));\n    };\n    this._link = link;\n    this._token = token;\n  }\n  getProfileInfo() {\n    return fetch(this._link + 'users/me', {\n      headers: {\n        authorization: this._token\n      }\n    }).then(res => this._handleSubmitResponse(res));\n  }\n  sendProfileInfo(name, about) {\n    return fetch(this._link + 'users/me', {\n      method: 'PATCH',\n      headers: {\n        authorization: this._token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: `${name}`,\n        about: `${about}`\n      })\n    }).then(res => this._handleSubmitResponse(res));\n  }\n  getInitialCards() {\n    return fetch(this._link + 'cards', {\n      headers: {\n        authorization: this._token\n      }\n    }).then(res => this._handleSubmitResponse(res));\n  }\n  sendNewCard(name, link) {\n    return fetch(this._link + 'cards', {\n      method: 'POST',\n      headers: {\n        authorization: this._token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: `${name}`,\n        link: `${link}`\n      })\n    }).then(res => this._handleSubmitResponse(res));\n  }\n  likeCard(cardId) {\n    return fetch(this._link + `cards/${cardId}/likes`, {\n      method: 'PUT',\n      headers: {\n        authorization: this._token\n      }\n    }).then(res => this._handleSubmitResponse(res));\n  }\n  dislikeCard(cardId) {\n    return fetch(this._link + `cards/${cardId}/likes`, {\n      method: 'DELETE',\n      headers: {\n        authorization: this._token\n      }\n    }).then(res => this._handleSubmitResponse(res));\n  }\n  changeAvatar(avatar) {\n    return fetch(this._link + `users/me/avatar`, {\n      method: 'PATCH',\n      headers: {\n        authorization: this._token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        avatar: `${avatar}`\n      })\n    }).then(res => this._handleSubmitResponse(res));\n  }\n  _handleSubmitResponse(res) {\n    return res.ok ? res.json() : Promise.reject(`Ошибка: ${res.status}`);\n  }\n}\nconst api = new Api('https://mesto.nomoreparties.co/v1/cohort-59/', '18140f85-55a6-4a9a-9472-01d6174a6166');\nexport default {\n  api\n};","map":{"version":3,"names":["Api","constructor","link","token","deleteCard","cardId","fetch","_link","method","headers","authorization","_token","then","res","_handleSubmitResponse","getProfileInfo","sendProfileInfo","name","about","body","JSON","stringify","getInitialCards","sendNewCard","likeCard","dislikeCard","changeAvatar","avatar","ok","json","Promise","reject","status","api"],"sources":["/Users/ilakorneluk/dev/mesto-react/src/utils/Api.js"],"sourcesContent":["class Api {\n  constructor(link, token) {\n    this._link = link;\n    this._token = token;\n  }\n\n  getProfileInfo() {\n    return fetch(this._link + 'users/me', {\n      headers: {\n      authorization: this._token\n    }\n  })\n    .then(res => this._handleSubmitResponse(res));\n  }\n\n  sendProfileInfo(name, about) {\n    return fetch(this._link + 'users/me', {\n      method: 'PATCH',\n      headers: {\n        authorization: this._token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify ({\n        name: `${name}`,\n        about: `${about}`\n      })\n    })\n      .then(res => this._handleSubmitResponse(res));\n  }\n\n  getInitialCards() {\n    return fetch(this._link + 'cards', {\n      headers: {\n      authorization: this._token\n    }\n  })\n    .then(res => this._handleSubmitResponse(res));\n  }\n\n  sendNewCard(name, link) {\n    return fetch(this._link + 'cards', {\n      method: 'POST',\n      headers: {\n        authorization: this._token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: `${name}`,\n        link: `${link}`\n      })\n    })\n      .then(res => this._handleSubmitResponse(res));\n  }\n\n  deleteCard = (cardId) => {\n    return fetch(this._link + `cards/${cardId}`, {\n      method: 'DELETE',\n      headers: {\n        authorization: this._token\n      }\n    })\n      .then(res => this._handleSubmitResponse(res));\n  }\n\n  likeCard(cardId) {\n    return fetch(this._link + `cards/${cardId}/likes`, {\n      method: 'PUT',\n      headers: {\n        authorization: this._token\n      }\n    })\n      .then(res => this._handleSubmitResponse(res));\n  }\n\n  dislikeCard(cardId) {\n    return fetch(this._link + `cards/${cardId}/likes`, {\n      method: 'DELETE',\n      headers: {\n        authorization: this._token\n      }\n    })\n      .then(res => this._handleSubmitResponse(res));\n  }\n\n  changeAvatar(avatar) {\n    return fetch(this._link + `users/me/avatar`, {\n      method: 'PATCH',\n      headers: {\n        authorization: this._token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        avatar: `${avatar}`\n      })\n    })\n      .then(res => this._handleSubmitResponse(res));\n  }\n\n  _handleSubmitResponse(res) {\n   return res.ok ? res.json() : Promise.reject(`Ошибка: ${res.status}`);\n  }\n}\n\nconst api = new Api('https://mesto.nomoreparties.co/v1/cohort-59/', '18140f85-55a6-4a9a-9472-01d6174a6166');\n\nexport default {api};\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}